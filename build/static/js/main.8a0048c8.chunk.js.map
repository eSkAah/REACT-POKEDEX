{"version":3,"sources":["models/mock-pokemon.ts","services/pokemon-service.ts","helpers/format-type.ts","components/loader.tsx","pages/pokemon-details.tsx","components/pokemon-card.tsx","components/pokemon-search.tsx","pages/pokemon-list.tsx","pages/page-not-found.tsx","components/pokemon-form.tsx","pages/pokemon-edit.tsx","models/pokemon.ts","pages/pokemon-add.tsx","services/authentication-service.ts","pages/login.tsx","PrivateRoute.tsx","App.tsx","index.tsx"],"names":["POKEMONS","id","name","hp","cp","picture","types","created","Date","PokemonService","this","isDev","fetch","then","response","json","catch","error","handleError","Promise","resolve","pokemons","data","isEmpty","find","pokemon","method","body","JSON","stringify","headers","index","findIndex","filter","push","term","includes","Object","keys","length","console","process","formatType","type","color","Loader","className","PokemonsDetail","match","useState","setPokemon","useEffect","getPokemon","params","src","alt","style","width","margin","to","map","key","PokemonCard","borderColor","setColor","history","useHistory","onClick","onMouseEnter","onMouseLeave","PokemonSearch","setTerm","setPokemons","placeholder","value","onChange","e","target","searchPokemon","handleInputChange","PokemonList","getPokemons","position","bottom","right","PageNotFound","PokemonForm","isEditForm","isValid","form","setForm","hasType","fieldName","fieldValue","newField","isAddForm","isTypesValid","handleSubmit","preventDefault","newForm","endsWith","test","validateForm","updatePokemon","addPokemon","onSubmit","deletePokemon","htmlFor","marginBottom","checked","disabled","concat","currentType","selectType","PokemonEdit","Pokemon","PokemonAdd","getTime","AuthenticationService","username","password","isAuthenticated","setTimeout","Login","message","setMessage","login","PrivateRoute","Component","component","rest","render","props","pathname","App","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8a0048c8.chunk.js","sourcesContent":["import Pokemon from './pokemon';\r\n   \r\nexport const POKEMONS: Pokemon[] = [\r\n {\r\n  id: 1,\r\n  name: \"Bulbizarre\",\r\n  hp: 25,\r\n  cp: 5,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/001.png\",\r\n  types: [\"Plante\", \"Poison\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 2,\r\n  name: \"Salamèche\",\r\n  hp: 28,\r\n  cp: 6,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/004.png\",\r\n  types: [\"Feu\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 3,\r\n  name: \"Carapuce\",\r\n  hp: 21,\r\n  cp: 4,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/007.png\",\r\n  types: [\"Eau\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 4,\r\n  name: \"Aspicot\",\r\n  hp: 16,\r\n  cp: 2,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/013.png\",\r\n  types: [\"Insecte\", \"Poison\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 5,\r\n  name: \"Roucool\",\r\n  hp: 30,\r\n  cp: 7,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/016.png\",\r\n  types: [\"Normal\", \"Vol\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 6,\r\n  name: \"Rattata\",\r\n  hp: 18,\r\n  cp: 6,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/019.png\",\r\n  types: [\"Normal\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 7,\r\n  name: \"Piafabec\",\r\n  hp: 14,\r\n  cp: 5,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/021.png\",\r\n  types: [\"Normal\", \"Vol\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 8,\r\n  name: \"Abo\",\r\n  hp: 16,\r\n  cp: 4,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/023.png\",\r\n  types: [\"Poison\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 9,\r\n  name: \"Pikachu\",\r\n  hp: 21,\r\n  cp: 7,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/025.png\",\r\n  types: [\"Electrik\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 10,\r\n  name: \"Sabelette\",\r\n  hp: 19,\r\n  cp: 3,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/027.png\",\r\n  types: [\"Normal\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 11,\r\n  name: \"Mélofée\",\r\n  hp: 25,\r\n  cp: 5,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/035.png\",\r\n  types: [\"Fée\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 12,\r\n  name: \"Groupix\",\r\n  hp: 17,\r\n  cp: 8,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/037.png\",\r\n  types: [\"Feu\"],\r\n  created: new Date()\r\n }\r\n];\r\n  \r\nexport default POKEMONS;","import Pokemon from \"../models/pokemon\";\r\nimport POKEMONS from \"../models/mock-pokemon\";\r\n  \r\nexport default class PokemonService {\r\n  \r\n  static pokemons:Pokemon[] = POKEMONS;\r\n  \r\n  static isDev = (!process.env.NODE_ENV || process.env.NODE_ENV === 'development');\r\n  \r\n  static getPokemons(): Promise<Pokemon[]> {\r\n    if(this.isDev) {\r\n      return fetch('http://localhost:3001/pokemons')\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {\r\n      resolve(this.pokemons);\r\n    });\r\n  }\r\n  \r\n  static getPokemon(id: number): Promise<Pokemon|null> {\r\n    if(this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons/${id}`)\r\n      .then(response => response.json())\r\n      .then(data => this.isEmpty(data) ? null : data)\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {    \r\n      resolve(this.pokemons.find(pokemon => id === pokemon.id));\r\n    }); \r\n  }\r\n  \r\n  static updatePokemon(pokemon: Pokemon): Promise<Pokemon> {\r\n    if(this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(pokemon),\r\n        headers: { 'Content-Type': 'application/json'}\r\n      })\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {\r\n      const { id } = pokemon;\r\n      const index = this.pokemons.findIndex(pokemon => pokemon.id === id);\r\n      this.pokemons[index] = pokemon;\r\n      resolve(pokemon);\r\n    }); \r\n  }\r\n  \r\n  static deletePokemon(pokemon: Pokemon): Promise<{}> {\r\n    if(this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json'}\r\n      })\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {    \r\n      const { id } = pokemon;\r\n      this.pokemons = this.pokemons.filter(pokemon => pokemon.id !== id);\r\n      resolve({});\r\n    }); \r\n  }\r\n  \r\n  static addPokemon(pokemon: Pokemon): Promise<Pokemon> {\r\n    pokemon.created = new Date(pokemon.created);\r\n  \r\n    if(this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(pokemon),\r\n        headers: { 'Content-Type': 'application/json'}\r\n      })\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {    \r\n      this.pokemons.push(pokemon);\r\n      resolve(pokemon);\r\n    }); \r\n  }\r\n  \r\n  static searchPokemon(term: string): Promise<Pokemon[]> {\r\n    if(this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons?q=${term}`)\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {    \r\n      const results = this.pokemons.filter(pokemon => pokemon.name.includes(term));\r\n      resolve(results);\r\n    });\r\n  \r\n  }\r\n  \r\n  static isEmpty(data: Object): boolean {\r\n    return Object.keys(data).length === 0;\r\n  }\r\n  \r\n  static handleError(error: Error): void {\r\n    console.error(error);\r\n  }\r\n}","const formatType = (type: string): string => {\r\n    let color: string;\r\n   \r\n    switch (type) {\r\n      case 'Feu': \r\n        color = 'red lighten-1'; \r\n        break; \r\n      case 'Eau': \r\n        color = 'blue lighten-1'; \r\n        break; \r\n      case 'Plante': \r\n        color = 'green lighten-1'; \r\n        break; \r\n      case 'Insecte': \r\n        color = 'brown lighten-1'; \r\n        break; \r\n      case 'Normal': \r\n        color = 'grey lighten-3'; \r\n        break; \r\n      case 'Vol': \r\n        color = 'blue lighten-3'; \r\n        break; \r\n      case 'Poison': \r\n        color = 'deep-purple accent-1'; \r\n        break; \r\n      case 'Fée': \r\n        color = 'pink lighten-4'; \r\n        break; \r\n      case 'Psy': \r\n        color = 'deep-purple darken-2'; \r\n        break; \r\n      case 'Electrik': \r\n        color = 'lime accent-1'; \r\n        break; \r\n      case 'Combat': \r\n        color = 'deep-orange'; \r\n        break; \r\n      default: \r\n        color = 'grey'; \r\n        break; \r\n    }\r\n   \r\n    return `chip ${color}`;\r\n  } \r\n\r\nexport default formatType;","import React, { FunctionComponent } from 'react';\r\n  \r\nconst Loader: FunctionComponent = () => {\r\n   \r\n  return (\r\n    <div className=\"preloader-wrapper big active\"> \r\n      <div className=\"spinner-layer spinner-blue\"> \r\n        <div className=\"circle-clipper left\"> \r\n          <div className=\"circle\"></div> \r\n        </div>\r\n        <div className=\"gap-patch\"> \r\n          <div className=\"circle\"></div> \r\n        </div><div className=\"circle-clipper right\"> \r\n          <div className=\"circle\"></div> \r\n        </div>\r\n      </div> \r\n   </div> \r\n  );\r\n}\r\n   \r\nexport default Loader;","import React, { FunctionComponent, useState, useEffect } from 'react';\r\nimport { RouteComponentProps, Link } from 'react-router-dom';\r\nimport Pokemon from '../models/pokemon';\r\nimport PokemonService from '../services/pokemon-service';\r\nimport formatType from '../helpers/format-type';\r\nimport Loader from '../components/loader';\r\n  \r\ntype Params = { id: string };\r\n  \r\nconst PokemonsDetail: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\r\n    \r\n  const [pokemon, setPokemon] = useState<Pokemon|null>(null);\r\n  \r\n  useEffect(() => {\r\n    PokemonService.getPokemon(+match.params.id).then(pokemon => setPokemon(pokemon));\r\n  }, [match.params.id]);\r\n    \r\n  return (\r\n    <div>\r\n      { pokemon ? (\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m8 offset-m2\"> \r\n            <h2 className=\"header center\">{ pokemon.name }</h2>\r\n            <div className=\"card hoverable\"> \r\n              <div className=\"card-image\">\r\n                <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\r\n                <Link to={`/pokemons/edit/${pokemon.id}`} className=\"btn btn-floating halfway-fab waves-effect waves-light\">\r\n                  <i className=\"material-icons\">edit</i>\r\n                </Link>\r\n              </div>\r\n              <div className=\"card-stacked\">\r\n                <div className=\"card-content\">\r\n                  <table className=\"bordered striped\">\r\n                    <tbody>\r\n                      <tr> \r\n                        <td>Nom</td> \r\n                        <td><strong>{ pokemon.name }</strong></td> \r\n                      </tr>\r\n                      <tr> \r\n                        <td>Points de vie</td> \r\n                        <td><strong>{ pokemon.hp }</strong></td> \r\n                      </tr> \r\n                      <tr> \r\n                        <td>Dégâts</td> \r\n                        <td><strong>{ pokemon.cp }</strong></td> \r\n                      </tr> \r\n                      <tr> \r\n                        <td>Types</td> \r\n                        <td>\r\n                          {pokemon.types.map(type => (\r\n                           <span key={type} className={formatType(type)}>{type}</span>\r\n                          ))}</td> \r\n                      </tr> \r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n                <div className=\"card-action\">\r\n                  <Link to=\"/\">Retour</Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <h4 className=\"center\"><Loader /></h4>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default PokemonsDetail;","import React, { FunctionComponent, useState } from 'react';\r\nimport Pokemon from '../models/pokemon';\r\nimport formatDate from '../helpers/format-date';\r\nimport formatType from '../helpers/format-type';\r\nimport './pokemon-card.css';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n  \r\ntype Props = {\r\n  pokemon: Pokemon,\r\n  borderColor?: string\r\n};\r\n  \r\nconst PokemonCard: FunctionComponent<Props> = ({pokemon, borderColor = '#009688'}) => {\r\n    \r\n    const[color, setColor] = useState<string>();\r\n    const history = useHistory();\r\n\r\n    const showBorder = () => {\r\n        setColor(borderColor);\r\n    }\r\n\r\n    const hideBorder = () => {\r\n        setColor('#f5f5f5');\r\n    }\r\n\r\n    const goToPokemon = (id:number) => {\r\n      history.push(`/pokemons/${id}`);\r\n    }\r\n\r\n\r\n  return (\r\n    <div className=\"col s6 m4\" onClick={() =>goToPokemon(pokemon.id)} onMouseEnter={showBorder} onMouseLeave={hideBorder}>\r\n      <div className=\"card horizontal\" style={{borderColor:color}}>\r\n        <div className=\"card-image\"> \r\n          <img src={pokemon.picture} alt={pokemon.name}/>\r\n        </div>\r\n        <div className=\"card-stacked\">\r\n          <div className=\"card-content\">\r\n            <p>{pokemon.name}</p>\r\n            \r\n            {pokemon.types.map(type => (\r\n                <span key={type} className={formatType(type)}>{type}</span>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div> \r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default PokemonCard;","import React, { FunctionComponent, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Pokemon from '../models/pokemon';\r\nimport PokemonService from '../services/pokemon-service';\r\n \r\nconst PokemonSearch: FunctionComponent = () => {\r\n  \r\n  const [term, setTerm] = useState<string>('');\r\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\r\n \r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const term = e.target.value;\r\n    setTerm(term);\r\n \r\n    if(term.length <= 1) {\r\n      setPokemons([]);\r\n      return;\r\n    }\r\n \r\n    PokemonService.searchPokemon(term).then(pokemons => setPokemons(pokemons));\r\n  }\r\n  \r\n  return (\r\n    <div className=\"row\"> \r\n    <div className=\"col s12 m6 offset-m3\"> \r\n      <div className=\"card\"> \r\n      <div className=\"card-content\"> \r\n        <div className=\"input-field\"> \r\n        <input type=\"text\" placeholder=\"Rechercher un pokémon\" value={term} onChange={e => handleInputChange(e)} /> \r\n        </div> \r\n        <div className='collection'>\r\n        {pokemons.map((pokemon) => (\r\n          <Link key={pokemon.id} to={`/pokemons/${pokemon.id}`} className=\"collection-item\">\r\n            {pokemon.name}\r\n          </Link>\r\n        ))}\r\n        </div> \r\n      </div> \r\n      </div> \r\n    </div> \r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default PokemonSearch;","import React, { FunctionComponent, useState, useEffect } from 'react';\r\nimport Pokemon from '../models/pokemon';\r\nimport PokemonCard from '../components/pokemon-card';\r\nimport PokemonService from '../services/pokemon-service';\r\nimport { Link } from 'react-router-dom';\r\nimport PokemonSearch from '../components/pokemon-search';\r\n  \r\nconst PokemonList: FunctionComponent = () => {\r\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\r\n  \r\n  useEffect(() => {\r\n    PokemonService.getPokemons().then(pokemons => setPokemons(pokemons));\r\n  }, []);\r\n  \r\n  return (\r\n    <div>\r\n      <h1 className=\"center\">Pokédex</h1>\r\n      <div className=\"container\"> \r\n        <div className=\"row\"> \r\n        <PokemonSearch />\r\n        {pokemons.map(pokemon => (\r\n          <PokemonCard key={pokemon.id} pokemon={pokemon} />\r\n        ))}\r\n        </div>\r\n        <Link to=\"pokemons/add\" className=\"btn-floating btn-large waves-effect waves-light red z-depth-3\" style={{position: 'fixed', bottom:'25px', right:'25px'}}>\r\n          <i className=\"material-icons\">add</i>\r\n        </Link>\r\n      </div>\r\n    </div> \r\n  );\r\n}\r\n  \r\nexport default PokemonList;","import React, { FunctionComponent } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n  \r\nconst PageNotFound: FunctionComponent = () => {\r\n  \r\n  return (\r\n    <div className=\"center\">\r\n      <img src=\"http://assets.pokemon.com/assets/cms2/img/pokedex/full/035.png\" alt=\"Page non trouvée\"/>\r\n      <h1>Hey, cette page n'existe pas !</h1> \r\n      <Link to=\"/\" className=\"waves-effect waves-teal btn-flat\">\r\n        Retourner à l'accueil\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default PageNotFound;","import React, { FunctionComponent, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Pokemon from '../models/pokemon';\r\nimport formatType from '../helpers/format-type';\r\nimport PokemonService from '../services/pokemon-service';\r\n\r\ntype Props = {\r\n  pokemon: Pokemon\r\n  isEditForm: boolean\r\n};\r\n\r\ntype Field = {\r\n    value?: any,\r\n    error?: string,\r\n    isValid?: boolean\r\n};\r\n\r\ntype Form = {\r\n  picture: Field,\r\n  name: Field,\r\n  hp: Field,\r\n  cp: Field,\r\n  types: Field\r\n}\r\n\r\nconst PokemonForm: FunctionComponent<Props> = ({pokemon, isEditForm}) => {\r\n\r\n  const history = useHistory();\r\n\r\n  const [form, setForm] = useState<Form>({\r\n    picture:{value: pokemon.picture},\r\n    name: { value: pokemon.name, isValid: true },\r\n    hp: { value: pokemon.hp, isValid: true },\r\n    cp: { value: pokemon.cp, isValid: true },\r\n    types: { value: pokemon.types, isValid: true }\r\n  });\r\n\r\n  const types: string[] = [\r\n    'Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik',\r\n    'Poison', 'Fée', 'Vol', 'Combat', 'Psy'\r\n  ];\r\n\r\n  const hasType = (type: string): boolean => {\r\n    return form.types.value.includes(type);\r\n  };\r\n\r\n  const selectType = (type: string, e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const checked = e.target.checked;\r\n\r\n    if(checked) {\r\n      // Si l'utilisateur coche un type, on l'ajoute à la liste des types du pokémon.\r\n      const newTypes: string[] = form.types.value.concat([type]);\r\n      const newField: Field = { value: newTypes };\r\n\r\n      setForm({...form, ...{ types: newField }});\r\n    } else {\r\n      // Si l'utilisateur décoche un type, on le retire à la liste des types du pokémon.\r\n      const newTypes: string[] = form.types.value.filter((currentType: string) => currentType !== type);\r\n      const newField: Field = { value: newTypes };\r\n\r\n      setForm({...form, ...{ types: newField }});\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const fieldName: string = e.target.name;\r\n    const fieldValue: string = e.target.value;\r\n    const newField: Field = { [fieldName]: { value: fieldValue } };\r\n\r\n    setForm({ ...form, ...newField});\r\n  };\r\n\r\n  const isAddForm = () => {\r\n    return !isEditForm;\r\n  };\r\n  \r\n  const validateForm = () => {\r\n    let newForm: Form = form;\r\n\r\n    // Validation de l'image\r\n    if(isAddForm()) {\r\n      const end = \".png\";\r\n\r\n      if(!form.picture.value.endsWith(end)) {\r\n        const errorMsg: string = \"L'url n'est pas valide.\";\r\n        const newField: Field = { value: form.picture.value, error: errorMsg, isValid: false};\r\n        newForm = { ...form, ...{picture: newField} };\r\n      }else{\r\n        const newField: Field = { value: form.picture.value, error: '', isValid: true};\r\n        newForm = { ...form, ...{picture: newField} };\r\n      }\r\n    }\r\n    \r\n    // Validator name\r\n    if(!/^[a-zA-Zàéè ]{3,25}$/.test(form.name.value)) {\r\n      const errorMsg: string = 'Le nom du pokémon est requis (1-25).';\r\n      const newField: Field = { value: form.name.value, error: errorMsg, isValid: false };\r\n      newForm = { ...newForm, ...{ name: newField } };\r\n    } else {\r\n      const newField: Field = { value: form.name.value, error: '', isValid: true };\r\n      newForm = { ...newForm, ...{ name: newField } };\r\n    }\r\n\r\n    // Validator hp\r\n    if(!/^[0-9]{1,3}$/.test(form.hp.value)) {\r\n      const errorMsg: string = 'Les points de vie du pokémon sont compris entre 0 et 999.';\r\n      const newField: Field = {value: form.hp.value, error: errorMsg, isValid: false};\r\n      newForm = { ...newForm, ...{ hp: newField } };\r\n    } else {\r\n      const newField: Field = { value: form.hp.value, error: '', isValid: true };\r\n      newForm = { ...newForm, ...{ hp: newField } };\r\n    }\r\n\r\n    // Validator cp\r\n    if(!/^[0-9]{1,2}$/.test(form.cp.value)) {\r\n      const errorMsg: string = 'Les dégâts du pokémon sont compris entre 0 et 99';\r\n      const newField: Field = {value: form.cp.value, error: errorMsg, isValid: false};\r\n      newForm = { ...newForm, ...{ cp: newField } };\r\n    } else {\r\n      const newField: Field = { value: form.cp.value, error: '', isValid: true };\r\n      newForm = { ...newForm, ...{ cp: newField } };\r\n    }\r\n\r\n    setForm(newForm);\r\n    return newForm.name.isValid && newForm.hp.isValid && newForm.cp.isValid;\r\n  }\r\n\r\n  const isTypesValid = (type: string): boolean => {\r\n    // Cas n°1: Le pokémon a un seul type, qui correspond au type passé en paramètre.\r\n    // Dans ce cas on revoie false, car l'utilisateur ne doit pas pouvoir décoché ce type (sinon le pokémon aurait 0 type, ce qui est interdit)\r\n    if (form.types.value.length === 1 && hasType(type)) {\r\n      return false;\r\n    }\r\n    \r\n    // Cas n°1: Le pokémon a au moins 3 types.\r\n    // Dans ce cas il faut empêcher à l'utilisateur de cocher un nouveau type, mais pas de décocher les types existants.\r\n    if (form.types.value.length >= 3 && !hasType(type)) { \r\n      return false; \r\n    } \r\n    \r\n    // Après avoir passé les deux tests ci-dessus, on renvoie 'true', \r\n    // c'est-à-dire que l'on autorise l'utilisateur à cocher ou décocher un nouveau type.\r\n    return true;\r\n  }\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const isFormValid = validateForm();\r\n    if(isFormValid) {\r\n      pokemon.picture = form.picture.value;\r\n      pokemon.name = form.name.value;\r\n      pokemon.hp = form.hp.value;\r\n      pokemon.cp = form.cp.value;\r\n      pokemon.types = form.types.value;\r\n\r\n      isEditForm ? updatePokemon() : addPokemon();\r\n    }\r\n  }\r\n\r\n  const addPokemon = () => {\r\n    PokemonService.addPokemon(pokemon).then(() => history.push('/pokemons'));\r\n  }\r\n\r\n  const updatePokemon = () => {\r\n    PokemonService.updatePokemon(pokemon).then(() => history.push(`/pokemons/${pokemon.id}`));\r\n  }\r\n\r\n  const deletePokemon = () => {\r\n    PokemonService.deletePokemon(pokemon).then( () => history.push(`/pokemons`));\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={(e) => handleSubmit(e)}>\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m8 offset-m2\">\r\n          <div className=\"card hoverable\"> \r\n            {isEditForm && (\r\n              <div className=\"card-image\">\r\n              <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\r\n              <span className=\"btn-floating halfway-fab waves-effect waves-light\">\r\n                <i onClick={deletePokemon} className=\"material-icons\">delete</i>\r\n              </span>\r\n            </div>\r\n            )}\r\n            <div className=\"card-stacked\">\r\n              <div className=\"card-content\">\r\n               {/* Pokemon picture */}\r\n               {isAddForm() && \r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"name\">Image</label>\r\n                  <input id=\"picture\" type=\"text\" name=\"picture\" className=\"form-control\" value={form.picture.value} onChange={e => handleInputChange(e)}></input>\r\n                  {/* error */}\r\n                  {form.picture.error &&\r\n                  <div className=\"card-panel red accent-1\"> \r\n                   {form.picture.error} \r\n                  </div>} \r\n                </div>\r\n               }\r\n                {/* Pokemon name */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"name\">Nom</label>\r\n                  <input id=\"name\" type=\"text\" name=\"name\" className=\"form-control\" value={form.name.value} onChange={e => handleInputChange(e)}></input>\r\n                  {/* error */}\r\n                  {form.name.error &&\r\n                  <div className=\"card-panel red accent-1\"> \r\n                   {form.name.error} \r\n                  </div>} \r\n                </div>\r\n                {/* Pokemon hp */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"hp\">Point de vie</label>\r\n                  <input id=\"hp\" type=\"number\" name=\"hp\" className=\"form-control\" value={form.hp.value} onChange={e => handleInputChange(e)}></input>\r\n                  {/* error */}\r\n                  {form.hp.error &&\r\n                  <div className=\"card-panel red accent-1\"> \r\n                   {form.hp.error}\r\n                  </div>} \r\n                </div>\r\n                {/* Pokemon cp */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"cp\">Dégâts</label>\r\n                  <input id=\"cp\" type=\"number\" name=\"cp\" className=\"form-control\" value={form.cp.value} onChange={e => handleInputChange(e)}></input>\r\n                  {/* error */}\r\n                  {form.cp.error &&\r\n                  <div className=\"card-panel red accent-1\"> \r\n                   {form.cp.error}\r\n                  </div>} \r\n                </div>\r\n                {/* Pokemon types */}\r\n                <div className=\"form-group\">\r\n                  <label>Types</label>\r\n                  {types.map(type => (\r\n                    <div key={type} style={{marginBottom: '10px'}}>\r\n                      <label>\r\n                        <input id={type} type=\"checkbox\" name=\"types\" className=\"filled-in\" value={type} checked={hasType(type)} disabled={!isTypesValid(type)} onChange={e => selectType(type, e)}></input>\r\n                        <span>\r\n                          <p className={formatType(type)}>{ type }</p>\r\n                        </span>\r\n                      </label>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <div className=\"card-action center\">\r\n                {/* Submit button */}\r\n                <button type=\"submit\" className=\"btn\">Valider</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n \r\nexport default PokemonForm;","import React, { FunctionComponent, useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport PokemonForm from '../components/pokemon-form';\r\nimport PokemonService from '../services/pokemon-service';\r\nimport Pokemon from '../models/pokemon';\r\nimport Loader from '../components/loader';\r\n\r\n\r\n \r\ntype Params = { id: string };\r\n  \r\nconst PokemonEdit: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\r\n    \r\n  const [pokemon, setPokemon] = useState<Pokemon|null>(null);\r\n  \r\n  useEffect(() => {\r\n    PokemonService.getPokemon(+match.params.id).then(pokemon => setPokemon(pokemon));\r\n  }, [match.params.id]);\r\n    \r\n  return (\r\n    <div>\r\n      { pokemon ? (\r\n        <div className=\"row\">\r\n            <h2 className=\"header center\">Éditer { pokemon.name }</h2>\r\n            <PokemonForm pokemon={pokemon} isEditForm={true}></PokemonForm>\r\n        </div>\r\n      ) : (\r\n        <h4 className=\"center\"><Loader /></h4>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default PokemonEdit;","export default class Pokemon {\r\n    // 1. Typage des propiétés d'un pokémon.\r\n    id: number;\r\n    hp: number;\r\n    cp: number;\r\n    name: string;\r\n    picture: string;\r\n    types: Array<string>;\r\n    created: Date;\r\n     \r\n    // 2. Définition des valeurs par défaut des propriétés d'un pokémon.\r\n    constructor(\r\n     id: number,\r\n     hp: number = 100,\r\n     cp: number = 10,\r\n     name: string = '...',\r\n     picture: string = 'https://assets.pokemon.com/assets/cms2/img/pokedex/detail/XXX.png',\r\n     types: Array<string> = ['Normal'],\r\n     created: Date = new Date()\r\n    ) {\r\n     // 3. Initialisation des propiétés d'un pokémons.\r\n     this.id = id;\r\n     this.hp = hp;\r\n     this.cp = cp;\r\n     this.name = name;\r\n     this.picture = picture;\r\n     this.types = types;\r\n     this.created = created;\r\n    }\r\n   }\r\n","import React, { FunctionComponent, useState } from 'react';\r\nimport PokemonForm from '../components/pokemon-form';\r\nimport Pokemon from '../models/pokemon';\r\n\r\n\r\nconst PokemonAdd: FunctionComponent = () => {\r\n    const [id] = useState<number>(new Date().getTime());\r\n    const [pokemon] = useState<Pokemon>(new Pokemon(id));\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <h2 className=\"header center\">Ajouter un Pokémon</h2>\r\n            <PokemonForm pokemon={pokemon} isEditForm={false}></PokemonForm>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default PokemonAdd;\r\n","export default class AuthenticationService {\r\n    static isAuthenticated: boolean = false;\r\n\r\n    static login(username: string, password: string): Promise<boolean> {\r\n        const isAuthenticated = (username === 'pikachu' && password === 'pikachu');\r\n\r\n        return new Promise(resolve => {\r\n            setTimeout(() => {\r\n                this.isAuthenticated = isAuthenticated;\r\n                resolve(isAuthenticated);\r\n            }, 1000);\r\n        });\r\n    }\r\n}","import React, { FunctionComponent, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AuthenticationService from '../services/authentication-service';\r\n\r\ntype Field = {\r\n  value?: any,\r\n  error?: string,\r\n  isValid?: boolean\r\n};\r\n\r\ntype Form = {\r\n  username: Field,\r\n  password: Field\r\n}\r\n\r\nconst Login: FunctionComponent = () => {\r\n\r\n  const history = useHistory();\r\n\r\n  const [form, setForm] = useState<Form>({\r\n    username: { value: '' },\r\n    password: { value: '' },\r\n  });\r\n\r\n  const [message, setMessage] = useState<string>('Vous êtes déconnecté. (pikachu / pikachu)');\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const fieldName: string = e.target.name;\r\n    const fieldValue: string = e.target.value;\r\n    const newField: Field = { [fieldName]: { value: fieldValue } };\r\n\r\n    setForm({ ...form, ...newField});\r\n  }\r\n\r\n  const validateForm = () => {\r\n    let newForm: Form = form;\r\n\r\n    // Validator username\r\n    if(form.username.value.length < 3) {\r\n      const errorMsg: string = 'Votre prénom doit faire au moins 3 caractères de long.';\r\n      const newField: Field = { value: form.username.value, error: errorMsg, isValid: false };\r\n      newForm = { ...newForm, ...{ username: newField } };\r\n    } else {\r\n      const newField: Field = { value: form.username.value, error: '', isValid: true };\r\n      newForm = { ...newForm, ...{ username: newField } };\r\n    }\r\n\r\n    // Validator password\r\n    if(form.password.value.length < 6) {\r\n      const errorMsg: string = 'Votre mot de passe doit faire au moins 6 caractères de long.';\r\n      const newField: Field = {value: form.password.value, error: errorMsg, isValid: false};\r\n      newForm = { ...newForm, ...{ password: newField } };\r\n    } else {\r\n      const newField: Field = { value: form.password.value, error: '', isValid: true };\r\n      newForm = { ...newForm, ...{ password: newField } };\r\n    }\r\n\r\n    setForm(newForm);\r\n\r\n    return newForm.username.isValid && newForm.password.isValid;\r\n  }\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const isFormValid = validateForm();\r\n    if(isFormValid) {\r\n      setMessage('👉 Tentative de connexion en cours ...');\r\n      AuthenticationService.login(form.username.value, form.password.value).then(isAuthenticated => {\r\n        if(!isAuthenticated) {\r\n          setMessage('🔐 Identifiant ou mot de passe incorrect.');\r\n          return;\r\n        }\r\n        \r\n        history.push('/pokemons');\r\n        \r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={(e) => handleSubmit(e)}>\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m8 offset-m2\">\r\n          <div className=\"card hoverable\">\r\n            <div className=\"card-stacked\">\r\n              <div className=\"card-content\">\r\n                {/* Form message */}\r\n                {message && <div className=\"form-group\">\r\n                  <div className=\"card-panel grey lighten-5\">\r\n                    {message}\r\n                  </div>\r\n                </div>}\r\n                {/* Field username */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Identifiant</label>\r\n                  <input id=\"username\" type=\"text\" name=\"username\" className=\"form-control\" value={form.username.value} onChange={e => handleInputChange(e)}></input>\r\n                  {/* error */}\r\n                  {form.username.error &&\r\n                  <div className=\"card-panel red accent-1\"> \r\n                   {form.username.error} \r\n                  </div>} \r\n                </div>\r\n                {/* Field password */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Mot de passe</label>\r\n                  <input id=\"password\" type=\"password\" name=\"password\" className=\"form-control\" value={form.password.value} onChange={e => handleInputChange(e)}></input>\r\n                  {/* error */}\r\n                  {form.password.error &&\r\n                  <div className=\"card-panel red accent-1\"> \r\n                   {form.password.error} \r\n                  </div>} \r\n                </div>\r\n              </div>\r\n              <div className=\"card-action center\">\r\n                {/* Submit button */}\r\n                <button type=\"submit\" className=\"btn\">Valider</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n \r\nexport default Login;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport AuthenticationService from './services/authentication-service';\r\n  \r\nconst PrivateRoute = ({ component: Component, ...rest }: any) => (\r\n  <Route {...rest} render={(props) => {\r\n    const isAuthenticated = AuthenticationService.isAuthenticated;\r\n    if (!isAuthenticated) {    \r\n      return <Redirect to={{ pathname: '/login' }} />\r\n    }\r\n  \r\n    return <Component {...props} />\r\n  }} />\r\n);\r\n  \r\nexport default PrivateRoute;","import React, {FunctionComponent, useState, useEffect} from 'react';\r\nimport { BrowserRouter as Router, Switch, Link, Route } from 'react-router-dom';\r\nimport PokemonsDetail from './pages/pokemon-details';\r\nimport PokemonList from './pages/pokemon-list';\r\nimport PageNotFound from './pages/page-not-found';\r\nimport PokemonEdit from './pages/pokemon-edit';\r\nimport PokemonAdd from './pages/pokemon-add';\r\nimport Login from './pages/login';\r\nimport PrivateRoute from './PrivateRoute';\r\n\r\nconst App: FunctionComponent = () => {\r\n\r\n return (\r\n\t <Router> {/*Mise en place du système de Routage*/}\r\n\t\t<div>\r\n\t\t\t{/*La barre de navigation commune à toutes les pages*/}\r\n\t\t\t<nav>\r\n\t\t\t\t<div className=\"nav-wrapper teal\">\r\n\t\t\t\t   <Link to=\"/\" className=\"brand-logo center\">Pokédex</Link>\r\n\t\t\t\t</div>\r\n\t\t\t</nav>\r\n\t\t\t{/*Système de géstion des routes de notre application*/}\r\n\t\t\t<Switch>\r\n\t\t\t\t<PrivateRoute exact path=\"/\" component={PokemonList} />\r\n\t\t\t\t<Route exact path=\"/login\" component={Login} />\r\n\t\t\t\t<PrivateRoute exact path=\"/pokemons\" component={PokemonList} />\r\n\t\t\t\t<PrivateRoute exact path=\"/pokemons/add\" component={PokemonAdd} />\r\n\t\t\t\t<PrivateRoute exact path=\"/pokemons/edit/:id\" component={PokemonEdit} />\r\n\t\t\t\t<PrivateRoute exact path=\"/pokemons/:id\" component={PokemonsDetail} />\r\n\t\t\t\t<Route component={PageNotFound} />\r\n\t\t\t</Switch>\r\n\t\t </div>\r\n\t </Router>\r\n\t\t  \r\n )\r\n}\r\n  \r\nexport default App;","import React from \"react\";\r\nimport ReactDOM  from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById(\"root\")\r\n);"],"sourceRoot":""}